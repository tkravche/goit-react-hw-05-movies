{"version":3,"file":"static/js/802.568efe65.chunk.js","mappings":"2LAGaA,EAAa,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACrC,OACE,0BACE,wBACGA,EAAOC,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GADA,OAUxB,C,yICfYI,EAAUC,EAAAA,GAAAA,IAAH,sJAQPC,EAAQD,EAAAA,GAAAA,MAAH,+F,SCLLE,EAAY,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAC1B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,yBAUA,OACE,SAACR,EAAD,WACE,kBAAMS,SAAUL,EAAhB,WACE,SAACF,EAAD,CAAOQ,KAAK,OAAOC,KAAK,SAASC,SAXlB,SAAAC,GACnB,IAAQC,EAAUD,EAAEE,OAAZD,MACRP,EAAcO,EAAME,cAAcC,OAInC,KAOK,mBAAQP,KAAK,SAASQ,UAAUZ,EAAhC,wBAMP,E,SCYD,EAjCe,WAAO,IAAD,EACnB,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAe2B,EAAf,KAEA,GAA0Bd,EAAAA,EAAAA,UAAS,IAAnC,eAAce,GAAd,WACA,GAAwCZ,EAAAA,EAAAA,MAAxC,eAAOa,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,GACvCjC,GAAWkC,EAAAA,EAAAA,MAmBjB,OAVAC,EAAAA,EAAAA,YAAU,WACO,KAAXH,IAEJI,EAAAA,EAAAA,IAAkBJ,GACfK,MAAK,YAA4B,IAAjBC,EAAgB,EAAxBC,KAAQD,QACfV,EAAUU,EACX,IACAE,OAAM,SAAAC,GAAK,OAAIZ,EAASY,EAAMC,QAAnB,GACf,GAAE,CAACV,KAGF,6BACE,SAACpB,EAAD,CAAWC,eAnBM,SAAAS,GACnBA,EAAEqB,iBACF,IAAMC,EAAOtB,EAAEuB,cACfd,EAAgB,CAAEC,OAAQY,EAAKE,SAASd,OAAOT,MAAMG,SACrDkB,EAAKG,OACN,KAeG,SAAChD,EAAA,EAAD,CAAYC,SAAUA,EAAUC,OAAQA,MAG7C,C,oKCpCD+C,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAGHC,EAAsB,WACjC,OAAOF,EAAAA,EAAAA,GAAM,uBAAwB,CACnCG,OAAQ,CACNC,QAASH,IAId,EAEYI,EAAiB,SAAAhD,GAC5B,OAAO2C,EAAAA,EAAAA,GAAM,sCAAD,OAAuC3C,EAAvC,oBAAqD4C,GAClE,EAEYK,EAAiB,SAAAjD,GAC5B,OAAO2C,EAAAA,EAAAA,GAAM,sCAAD,OAC4B3C,EAD5B,4BACkD4C,GAE/D,EAEYM,EAAoB,SAAAlD,GAC/B,OAAO2C,EAAAA,EAAAA,GAAM,sCAAD,OAC4B3C,EAD5B,4BACkD4C,GAE/D,EAEYb,EAAoB,SAAAJ,GAC/B,OAAOgB,EAAAA,EAAAA,GAAM,mDAAD,OACyChB,EADzC,oBAC2DiB,EAD3D,WAGb,C","sources":["components/MoviesList/MoviesList.jsx","components/Searchbox/SearchBox.styled.jsx","components/Searchbox/SearchBox.jsx","pages/MoviesPage.jsx","services/moviesAPI.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ location, movies }) => {\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n  location: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n","import PropTypes from 'prop-types';\nimport { Wrapper, Input } from './SearchBox.styled';\nimport React, { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport const SearchBox = ({ OnHandleSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setInputValue(value.toLowerCase().trim());\n\n    // const nextParams = inputValue !== '' ? { inputValue } : {};\n    // setSearchParams(nextParams);\n  };\n\n  return (\n    <Wrapper>\n      <form onSubmit={OnHandleSubmit}>\n        <Input type=\"text\" name=\"search\" onChange={handleChange} />\n\n        <button type=\"submit\" disabled={inputValue ? false : true}>\n          Search\n        </button>\n      </form>\n    </Wrapper>\n  );\n};\n\nSearchBox.propTypes = {\n  OnHandleSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\n\nimport { fetchMovieByQuery } from 'services/moviesAPI';\nimport { SearchBox } from 'components/Searchbox/SearchBox';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n\n  const [error, setError] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search') ?? '';\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ search: form.elements.search.value.trim() });\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (search === '') return;\n\n    fetchMovieByQuery(search)\n      .then(({ data: { results } }) => {\n        setMovies(results);\n      })\n      .catch(error => setError(error.message));\n  }, [search]);\n\n  return (\n    <main>\n      <SearchBox OnHandleSubmit={handleSubmit} />\n      <MoviesList location={location} movies={movies} />\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '612624e4ceb53e70d9f6450958bf781b';\n// const PER_PAGE = 12;\n\nexport const fetchTrendingMovies = () => {\n  return axios('/trending/movie/day?', {\n    params: {\n      api_key: API_KEY,\n      // per_page: PER_PAGE,\n    },\n  });\n};\n\nexport const fetchMovieById = id => {\n  return axios(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieCast = id => {\n  return axios(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n};\n\nexport const fetchMovieReviews = id => {\n  return axios(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n};\n\nexport const fetchMovieByQuery = search => {\n  return axios(\n    `https://api.themoviedb.org/3/search/movie?query=${search}&api_key=${API_KEY}&page=1`\n  );\n};\n// https://api.themoviedb.org/3/trending/movie/day?api_key=612624e4ceb53e70d9f6450958bf781b\n//https://api.themoviedb.org/3/movie/868759?api_key=612624e4ceb53e70d9f6450958bf781b\n//https://api.themoviedb.org/3/movie/868759/credits?api_key=612624e4ceb53e70d9f6450958bf781b\n//https://api.themoviedb.org/3/movie/868759/reviews?api_key=612624e4ceb53e70d9f6450958bf781b\n//https://api.themoviedb.org/3/search/movie?query=batman&api_key=612624e4ceb53e70d9f6450958bf781b&page=1\n"],"names":["MoviesList","location","movies","map","movie","to","id","state","from","title","Wrapper","styled","Input","SearchBox","OnHandleSubmit","useState","inputValue","setInputValue","useSearchParams","onSubmit","type","name","onChange","e","value","target","toLowerCase","trim","disabled","setMovies","setError","searchParams","setSearchParams","search","get","useLocation","useEffect","fetchMovieByQuery","then","results","data","catch","error","message","preventDefault","form","currentTarget","elements","reset","axios","API_KEY","fetchTrendingMovies","params","api_key","fetchMovieById","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}