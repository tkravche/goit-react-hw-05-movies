{"version":3,"file":"static/js/983.0de50bb8.chunk.js","mappings":"2LAGaA,EAAa,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACrC,OACE,0BACE,wBACGA,EAAOC,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GADA,OAUxB,C,gGCUD,UArBa,WACX,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOR,EAAP,KAAeS,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAcE,GAAd,WACMX,GAAWY,EAAAA,EAAAA,MAUjB,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,YAA4B,IAAjBC,EAAgB,EAAxBC,KAAQD,QACfN,GAAU,SAAAQ,GAAS,cAAQF,EAAR,GACpB,IACAG,OAAM,SAAAC,GAAK,OAAIT,EAASS,EAAMC,QAAnB,GACf,GAAE,KAGD,6BACE,4CACA,SAAC,IAAD,CAAYrB,SAAUA,EAAUC,OAAQA,MAG7C,C,oKCvBDqB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAGHT,EAAsB,WACjC,OAAOQ,EAAAA,EAAAA,GAAM,uBAAwB,CACnCE,OAAQ,CACNC,QAASF,IAId,EAEYG,EAAiB,SAAArB,GAC5B,OAAOiB,EAAAA,EAAAA,GAAM,sCAAD,OAAuCjB,EAAvC,oBAAqDkB,GAClE,EAEYI,EAAiB,SAAAtB,GAC5B,OAAOiB,EAAAA,EAAAA,GAAM,sCAAD,OAC4BjB,EAD5B,4BACkDkB,GAE/D,EAEYK,EAAoB,SAAAvB,GAC/B,OAAOiB,EAAAA,EAAAA,GAAM,sCAAD,OAC4BjB,EAD5B,4BACkDkB,GAE/D,EAEYM,EAAoB,SAAAC,GAC/B,OAAOR,EAAAA,EAAAA,GAAM,mDAAD,OACyCQ,EADzC,oBAC2DP,EAD3D,WAGb,C","sources":["components/MoviesList/MoviesList.jsx","pages/HomePage.jsx","services/moviesAPI.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ location, movies }) => {\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n  location: PropTypes.object.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { MoviesList } from '../components/MoviesList/MoviesList';\nimport { fetchTrendingMovies } from '../services/moviesAPI';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchTrendingMovies()\n      .then(({ data: { results } }) => {\n        setMovies(prevState => [...results]);\n      })\n      .catch(error => setError(error.message));\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      <MoviesList location={location} movies={movies} />\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '612624e4ceb53e70d9f6450958bf781b';\n// const PER_PAGE = 12;\n\nexport const fetchTrendingMovies = () => {\n  return axios('/trending/movie/day?', {\n    params: {\n      api_key: API_KEY,\n      // per_page: PER_PAGE,\n    },\n  });\n};\n\nexport const fetchMovieById = id => {\n  return axios(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const fetchMovieCast = id => {\n  return axios(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n};\n\nexport const fetchMovieReviews = id => {\n  return axios(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n};\n\nexport const fetchMovieByQuery = search => {\n  return axios(\n    `https://api.themoviedb.org/3/search/movie?query=${search}&api_key=${API_KEY}&page=1`\n  );\n};\n// https://api.themoviedb.org/3/trending/movie/day?api_key=612624e4ceb53e70d9f6450958bf781b\n//https://api.themoviedb.org/3/movie/868759?api_key=612624e4ceb53e70d9f6450958bf781b\n//https://api.themoviedb.org/3/movie/868759/credits?api_key=612624e4ceb53e70d9f6450958bf781b\n//https://api.themoviedb.org/3/movie/868759/reviews?api_key=612624e4ceb53e70d9f6450958bf781b\n//https://api.themoviedb.org/3/search/movie?query=batman&api_key=612624e4ceb53e70d9f6450958bf781b&page=1\n"],"names":["MoviesList","location","movies","map","movie","to","id","state","from","title","useState","setMovies","setError","useLocation","useEffect","fetchTrendingMovies","then","results","data","prevState","catch","error","message","axios","API_KEY","params","api_key","fetchMovieById","fetchMovieCast","fetchMovieReviews","fetchMovieByQuery","search"],"sourceRoot":""}